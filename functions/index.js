const functions = require('firebase-functions');
const admin = require('firebase-admin');
const axios = require('axios');

admin.initializeApp();
const db = admin.firestore();

// Configuraci√≥n de Deepseek API - Obtenida de Firebase Config y variables de entorno
console.log('[DEBUG] process.env.DEEPSEEK_API_KEY:', process.env.DEEPSEEK_API_KEY ? 'SET' : 'NOT_SET');

let configValue;
try {
    configValue = functions.config().deepseek?.key;
    console.log('[DEBUG] functions.config().deepseek?.key:', configValue ? configValue.substring(0, 8) + '...' : 'NOT_SET');
} catch (error) {
    console.log('[DEBUG] Error accessing functions.config():', error.message);
    configValue = null;
}

// Solo usar env variable si es una API key real (no el placeholder)
const envKey = process.env.DEEPSEEK_API_KEY && process.env.DEEPSEEK_API_KEY.startsWith('sk-') ? process.env.DEEPSEEK_API_KEY : null;
const DEEPSEEK_API_KEY = envKey || configValue;
const DEEPSEEK_ENDPOINTS = [
    'https://api.deepseek.com/v1'
];

console.log('[DEBUG] Final DEEPSEEK_API_KEY:', DEEPSEEK_API_KEY ? DEEPSEEK_API_KEY.substring(0, 8) + '...' : 'NOT_SET');

// Validar que tenemos la API key
if (!DEEPSEEK_API_KEY || !DEEPSEEK_API_KEY.startsWith('sk-')) {
    console.warn('‚ö†Ô∏è DEEPSEEK_API_KEY no configurada correctamente.');
    console.warn('üìù Para usar Deepseek: configura con firebase functions:config:set deepseek.key=TU_API_KEY');
} else {
    console.log('[INIT] ‚úÖ Deepseek API key configurada correctamente:', DEEPSEEK_API_KEY.substring(0, 8) + '...');
}

// FUNCI√ìN PARA CONSTRUIR PROMPTS DIN√ÅMICOS PARA DEEPSEEK
function buildPromptForPlatform(platform, keyword, userContext) {
    // Extraer el tipo de copy del userContext
    const copyType = userContext ? userContext.toLowerCase() : '';
    const isPositioning = copyType.includes('posicionamiento') || copyType.includes('branding');
    const isUrgency = copyType.includes('urgencia') || copyType.includes('escasez');
    const isDirectSale = copyType.includes('venta directa') || copyType.includes('persuasivo');
    
    let copyStrategy = '';
    if (isPositioning) {
        copyStrategy = 'POSICIONAMIENTO Y BRANDING - Enf√≥cate en identidad, autenticidad, mindset, filosof√≠a personal, transformaci√≥n de identidad, construcci√≥n de marca personal';
    } else if (isUrgency) {
        copyStrategy = 'URGENCIA Y ESCASEZ - Enf√≥cate en l√≠mites de tiempo, ofertas limitadas, oportunidades que expiran, FOMO, exclusividad, √∫ltimas oportunidades';
    } else if (isDirectSale) {
        copyStrategy = 'VENTA DIRECTA Y PERSUASI√ìN - Enf√≥cate en ROI, n√∫meros espec√≠ficos, resultados medibles, ofertas directas, precios, testimonios, garant√≠as';
    } else {
        copyStrategy = 'GENERAL - Contenido engaging y persuasivo';
    }
    
    const platformSpecs = {
        'Facebook': {
            tone: 'conversacional y emocional',
            length: '150-200 palabras',
            style: 'storytelling personal, preguntas para engagement, emojis moderados',
            cta: 'comentarios y reacciones'
        },
        'LinkedIn': {
            tone: 'profesional pero humano',
            length: '200-300 palabras',
            style: 'insights profesionales, datos, experiencia laboral, hashtags relevantes',
            cta: 'networking y discusi√≥n profesional'
        },
        'X / Twitter': {
            tone: 'directo y impactante',
            length: '200-280 caracteres',
            style: 'statements contundentes, controversial, viral, threads cortos',
            cta: 'retweets y replies'
        },
        'Instagram': {
            tone: 'visual y aspiracional',
            length: '120-150 palabras',
            style: 'lifestyle, transformaci√≥n visual, hashtags trending, muy emocional',
            cta: 'likes y shares en stories'
        },
        'WhatsApp': {
            tone: 'personal e √≠ntimo',
            length: '80-120 palabras',
            style: 'mensaje directo, urgente, como de amigo cercano',
            cta: 'respuesta inmediata'
        },
        'TikTok': {
            tone: 'trendy y generacional',
            length: '80-100 palabras',
            style: 'viral, POV, trends actuales, muy casual',
            cta: 'duetos y comentarios'
        },
        'Telegram': {
            tone: 'anal√≠tico y exclusivo',
            length: '200-250 palabras',
            style: 'data-driven, an√°lisis profundo, contenido premium',
            cta: 'forwarding y discusi√≥n'
        },
        'Reddit': {
            tone: 'aut√©ntico y detallado',
            length: '300-400 palabras',
            style: 'experiencia real, storytime, muy genuino, sin marketing',
            cta: 'upvotes y comentarios'
        },
        'YouTube': {
            tone: 'educativo y entretenido',
            length: '200-300 palabras',
            style: 'descripci√≥n de video, promesa de valor, storytelling',
            cta: 'suscripciones y comentarios'
        }
    };
    
    const spec = platformSpecs[platform] || platformSpecs['Facebook'];
    
    return `Act√∫a como un copywriter experto en ${platform}.

KEYWORD: "${keyword}"
ESTRATEGIA: ${copyStrategy}

ESPECIFICACIONES T√âCNICAS PARA ${platform}:
${getFormatSpecsForPlatform(platform)}

RESPONDE EN FORMATO JSON EXACTO:
{
  "contenido": "[COPY COMPLETO con emojis y hashtags integrados al final del texto]",
  "formatoVisual": "[DESCRIPCI√ìN MUY ESPEC√çFICA: dimensiones exactas, colores hex, tipograf√≠a, elementos visuales, estilo de imagen/video, props, escenario, iluminaci√≥n - TODO para trabajar con IA generativa]",
  "cta": "[Call to action espec√≠fico para ${platform}]"
}

REQUISITOS OBLIGATORIOS:
1. Contenido 100% √∫nico sobre "${keyword}" - NO usar plantillas gen√©ricas
2. Tono: ${spec.tone}
3. Longitud: ${spec.length}
4. HASHTAGS integrados AL FINAL del contenido (no por separado)
5. FORMATO VISUAL obligatorio y espec√≠fico al 100% para IA
6. Respuesta SOLO en JSON v√°lido, sin markdown ni explicaciones

CR√çTICO: formatoVisual debe ser s√∫per espec√≠fico para generar imagen/video con IA (dimensiones, colores, estilo, elementos, props, etc.)`;
}

// FUNCI√ìN PARA OBTENER ESPECIFICACIONES DE FORMATO POR PLATAFORMA
function getFormatSpecsForPlatform(platform) {
    const formatSpecs = {
        'Facebook': `
- ESTRUCTURA: Gancho (1-2 l√≠neas) + Historia personal + Valor/Aprendizaje + Pregunta de engagement
- P√ÅRRAFOS: M√°ximo 3-4 l√≠neas por p√°rrafo para facilitar lectura
- EMOJIS: 1-2 por p√°rrafo, estrat√©gicamente ubicados
- HASHTAGS: 3-5 hashtags relevantes al final
- CTA: Pregunta directa que invite a comentar
EJEMPLO ESTRUCTURA:
"[Gancho impactante] üéØ

[Historia o contexto personal]
[P√°rrafo con valor/insight]

[Pregunta de engagement] ‚¨áÔ∏è
#hashtag1 #hashtag2 #hashtag3"`,

        'LinkedIn': `
- ESTRUCTURA: Hook profesional + Contexto + Insights + Llamada a acci√≥n profesional
- P√ÅRRAFOS: P√°rrafos cortos con bullets o n√∫meros cuando sea relevante
- EMOJIS: Moderados, principalmente iconos profesionales
- HASHTAGS: 5-8 hashtags profesionales espec√≠ficos del sector
- CTA: Invitaci√≥n a networking, comentarios profesionales o conexi√≥n
EJEMPLO ESTRUCTURA:
"üéØ [Insight profesional]

‚úÖ Punto clave 1
‚úÖ Punto clave 2  
‚úÖ Punto clave 3

[Reflexi√≥n profesional]

¬øQu√© opinan ustedes? üëá

#hashtag1 #hashtag2 #hashtag3 #hashtag4"`,

        'X / Twitter': `
- ESTRUCTURA: Thread format (si es necesario) o tweet √∫nico impactante
- L√çMITE: 280 caracteres m√°ximo
- EMOJIS: 2-3 m√°ximo, muy espec√≠ficos
- HASHTAGS: 2-3 hashtags trending o espec√≠ficos
- CTA: Retweet, reply o engagement directo
EJEMPLO ESTRUCTURA:
"üî• [Statement impactante]

[Explicaci√≥n breve]

[CTA directa] üëá

#hashtag1 #hashtag2"`,

        'Instagram': `
- ESTRUCTURA: Gancho visual + Historia aspiracional + Transformaci√≥n + CTA para stories
- P√ÅRRAFOS: L√≠neas cortas, muy visual, espaciado amplio
- EMOJIS: Abundantes pero est√©ticos, alineados con el mood
- HASHTAGS: 10-15 hashtags espec√≠ficos del nicho
- CTA: Guiar a stories, DM o guardar post
EJEMPLO ESTRUCTURA:
"‚ú® [Gancho aspiracional]

üí´ [Historia de transformaci√≥n]

üåü [Momento de revelaci√≥n]

üíï [CTA emocional]

#hashtag1 #hashtag2 #hashtag3 ... (hasta 15)"`,

        'WhatsApp': `
- ESTRUCTURA: Mensaje personal directo + Urgencia + CTA inmediata
- FORMATO: Sin p√°rrafos largos, como mensaje de texto real
- EMOJIS: Casual, como conversaci√≥n real
- HASHTAGS: NO usar hashtags (no es apropiado para WhatsApp)
- CTA: Respuesta inmediata, acci√≥n directa
EJEMPLO ESTRUCTURA:
"üö® [Mensaje urgente personalizado]

[Contexto breve]

[Beneficio directo]

¬øEst√°s interesad@? 
Responde YA üëÜ"`,

        'TikTok': `
- ESTRUCTURA: Hook viral + Storyline r√°pida + Revelation + CTA trend
- FORMATO: Texto para caption, no para audio
- EMOJIS: Trending, generacionales
- HASHTAGS: 3-5 hashtags trending + espec√≠ficos
- CTA: Duetos, comentarios, shares
EJEMPLO ESTRUCTURA:
"POV: [Situaci√≥n relatable] üëÄ

‚ú® [Plot twist o revelaci√≥n]

Tell me you relate üíÖ

#hashtag1 #trending #relatable"`,

        'Telegram': `
- ESTRUCTURA: An√°lisis profesional + Data + Insights + CTA exclusivo
- FORMATO: Texto denso, informativo, premium content
- EMOJIS: √çconos informativos y t√©cnicos
- HASHTAGS: 2-3 hashtags t√©cnicos o de nicho
- CTA: Forwarding, discusi√≥n anal√≠tica
EJEMPLO ESTRUCTURA:
"üìä [An√°lisis t√©cnico]

üìà Data points importantes:
‚Ä¢ Punto 1
‚Ä¢ Punto 2

üí° [Insight clave]

#hashtag1 #hashtag2"`,

        'Reddit': `
- ESTRUCTURA: T√≠tulo honesto + Contexto detallado + Story + Lessons learned
- FORMATO: Como post genuino de Reddit, aut√©ntico
- EMOJIS: M√≠nimos, solo cuando es natural
- HASHTAGS: NO usar hashtags (no es estilo Reddit)
- CTA: Upvotes, comentarios, compartir experiencias
EJEMPLO ESTRUCTURA:
"[Honest title] - My experience with [tema]

Context: [Background story]

What happened: [Detailed experience]

What I learned: [Key insights]

Has anyone else experienced this?"`,

        'YouTube': `
- ESTRUCTURA: Hook para thumbnail + Promesa de valor + Preview + CTA suscripci√≥n
- FORMATO: Descripci√≥n de video optimizada para algoritmo
- EMOJIS: Para separar secciones y llamar atenci√≥n
- HASHTAGS: 3-5 hashtags de YouTube espec√≠ficos
- CTA: Suscribirse, activar notificaciones, comentar
EJEMPLO ESTRUCTURA:
"üéØ [Hook que coincida con thumbnail]

En este video aprender√°s:
‚úÖ Punto 1
‚úÖ Punto 2
‚úÖ Punto 3

[Preview del contenido m√°s valioso]

üëá SUSCR√çBETE y activa las notificaciones

#hashtag1 #hashtag2 #hashtag3"`
    };

    return formatSpecs[platform] || formatSpecs['Facebook'];
}

// FUNCI√ìN PARA GENERAR HASHTAGS ESPEC√çFICOS POR PLATAFORMA
function generateHashtagsForPlatform(platform, keyword) {
    const baseKeyword = keyword.toLowerCase().replace(/\s+/g, '').substring(0, 12);
    
    const hashtagsByPlatform = {
        'Facebook': [
            `#${baseKeyword}`,
            `#${baseKeyword}tips`,
            `#crecimientopersonal`,
            `#motivacion`,
            `#exito`
        ],
        'LinkedIn': [
            `#${baseKeyword}`,
            `#liderazgo`,
            `#desarrolloprofesional`,
            `#networking`,
            `#crecimientoempresarial`,
            `#productividad`,
            `#estrategia`,
            `#innovacion`
        ],
        'X / Twitter': [
            `#${baseKeyword}`,
            `#tips`,
            `#Thread`
        ],
        'Instagram': [
            `#${baseKeyword}`,
            `#${baseKeyword}tips`,
            `#motivation`,
            `#lifestyle`,
            `#selfcare`,
            `#mindset`,
            `#inspiration`,
            `#wellness`,
            `#growth`,
            `#transformation`,
            `#positivevibes`,
            `#selfimprovement`,
            `#success`,
            `#entrepreneur`,
            `#personaldevelopment`
        ],
        'WhatsApp': [], // WhatsApp no usa hashtags
        'TikTok': [
            `#${baseKeyword}`,
            `#fyp`,
            `#viral`,
            `#trending`,
            `#tips`
        ],
        'Telegram': [
            `#${baseKeyword}`,
            `#analisis`,
            `#data`
        ],
        'Reddit': [], // Reddit no usa hashtags tradicionales
        'YouTube': [
            `#${baseKeyword}`,
            `#tutorial`,
            `#howto`
        ]
    };

    const platformHashtags = hashtagsByPlatform[platform] || hashtagsByPlatform['Facebook'];
    
    // Para Instagram, devolver m√°s hashtags
    if (platform === 'Instagram') {
        return platformHashtags.slice(0, 15);
    }
    
    // Para otras plataformas, limitar seg√∫n sus caracter√≠sticas
    if (platform === 'LinkedIn') {
        return platformHashtags.slice(0, 8);
    }
    
    if (platform === 'X / Twitter') {
        return platformHashtags.slice(0, 3);
    }
    
    return platformHashtags.slice(0, 5);
}

// FUNCI√ìN PARA GENERAR EJEMPLOS ESPEC√çFICOS POR RED SOCIAL Y TIPO DE COPY (FALLBACK MEJORADO)
function getExamplesForNetwork(networkName, keyword, userContext) {
    // Extraer el tipo de copy del userContext
    const copyType = userContext ? userContext.toLowerCase() : '';
    const isPositioning = copyType.includes('posicionamiento') || copyType.includes('branding');
    const isUrgency = copyType.includes('urgencia') || copyType.includes('escasez');
    const isDirectSale = copyType.includes('venta directa') || copyType.includes('persuasivo');
    
    // Generar n√∫meros y timeframes aleatorios para evitar repetici√≥n
    const timeframes = ['3 semanas', '45 d√≠as', '2 meses', '90 d√≠as', '4 meses', 'medio a√±o', '8 meses', '1 a√±o'];
    const numbers = ['127', '234', '89', '156', '67', '198', '341', '78', '245', '112'];
    const percentages = ['180%', '240%', '320%', '150%', '275%', '190%', '380%', '210%'];
    const cases = ['300+', '750+', '420+', '680+', '950+', '1200+', '380+', '560+'];
    
    const randomTime = timeframes[Math.floor(Math.random() * timeframes.length)];
    const randomNumber = numbers[Math.floor(Math.random() * numbers.length)];
    const randomPercent = percentages[Math.floor(Math.random() * percentages.length)];
    const randomCases = cases[Math.floor(Math.random() * cases.length)];
    
    switch(networkName) {
        case 'Facebook':
            if (isPositioning) {
                return `üí≠ ${keyword} no cambi√≥ solo mis resultados... transform√≥ completamente mi identidad. üåü Antes era alguien que "intentaba" cosas. Ahora soy alguien que las vive desde el alma. üí´ La diferencia no est√° en las t√©cnicas, sino en qui√©n me permito ser cuando las aplico. üîÆ Mi familia nota algo diferente en m√≠, pero no pueden poner en palabras qu√© es. ‚ú® Es esa confianza silenciosa que viene de estar alineado con tu verdadero prop√≥sito. üëá ¬øAlguna vez han sentido esa transformaci√≥n de identidad tan profunda que hasta cambi√≥ su energ√≠a? üíï`;
            }
            if (isUrgency) {
                return `üö® BREAKING: ${keyword} se retira del mercado en ${randomTime} ‚è∞ El creador anunci√≥ que cierra para siempre despu√©s de recibir ${randomCases} historias de transformaci√≥n. üí• "Ya cumpl√≠ mi prop√≥sito", dijo en su √∫ltimo video. üîí Despu√©s del deadline NO habr√° excepciones, extensiones ni s√∫plicas que funcionen. ‚ö° Si lo has estado posponiendo, este es literalmente tu √∫ltimo chance. üëÜ Comenta "√öLTIMO" si necesitas el acceso antes de que desaparezca para siempre. ‚è≥`;
            }
            if (isDirectSale) {
                return `üí∞ N√öMEROS REALES: ${keyword} me gener√≥ $${randomNumber}K en ${randomTime} üìä No es postureo, son screenshots verificables de mi cuenta bancaria. üéØ La estrategia exacta que uso: ‚úÖ ${randomTime} de implementaci√≥n ‚úÖ Cero inversi√≥n inicial ‚úÖ Escalable a cualquier nivel üî• ¬øQuieres el sistema paso a paso? üí∏ Solo 50 personas este mes. Responde "${randomNumber}" si est√°s ready para cambiar tu situaci√≥n financiera. üöÄ`;
            }
            return `üí≠ Cuando prob√© ${keyword} por primera vez, honestly pens√© que era otro trend pasajero. ${randomTime} despu√©s... mi vida es irreconocible. üåü No solo cambi√≥ mis resultados, cambi√≥ mi forma de pensar sobre las posibilidades.`;
            
        case 'LinkedIn':
            if (isPositioning) {
                return `üéØ LIDERAZGO TRANSFORMACIONAL: ${keyword} redefini√≥ mi filosof√≠a empresarial en ${randomTime}. üìà No se trata de optimizar procesos... se trata de reimaginar qu√© significa liderar con prop√≥sito aut√©ntico. üí° Mi equipo pas√≥ de ejecutar tareas a co-crear visiones. La transformaci√≥n fue profunda: cambiamos de una mentalidad de "cumplir objetivos" a "impactar vidas". ‚ö° El ROI m√°s valioso no se mide en m√©tricas, se siente en la energ√≠a del equipo cuando llegan cada lunes. üíº ¬øC√≥mo est√°n redefiniendo ustedes el liderazgo desde la autenticidad? #LiderazgoAutentico #TransformacionOrganizacional #PropositoEmpresarial`;
            }
            if (isUrgency) {
                return `‚ö†Ô∏è ALERTA ESTRAT√âGICA: La oportunidad de dominar ${keyword} se cierra Q1 2025. üìä McKinsey confirma: solo las primeras ${randomCases} empresas que lo adopten mantendr√°n ventaja competitiva. ‚è∞ Timeline cr√≠tico: ${randomTime} para posicionarse antes de saturaci√≥n total del mercado. üéØ Early adopters ya capturan ${randomPercent} de las oportunidades emergentes. üíº En mis 15 a√±os como estratega, veo el mismo patr√≥n: quienes act√∫an r√°pido dominan sectores completos. üöÄ ¬øSu organizaci√≥n est√° preparada para liderar o seguir? #EstrategiaEmpresarial #VentajaCompetitiva #Innovacion`;
            }
            if (isDirectSale) {
                return `üíé ROI AUDITADO: ${keyword} increment√≥ nuestros ingresos ${randomPercent} en ${randomTime}. üìà No son proyecciones, son resultados certificados por PwC. üéØ Impacto espec√≠fico documentado: ‚úÖ +$${randomNumber}K en nuevos contratos ‚úÖ ${randomPercent} mejora en retenci√≥n de clientes ‚úÖ ${randomCases} leads calificados adicionales üíº Comparto la metodolog√≠a exacta con 15 empresas serious este trimestre. ü§ù Investment: $4,997 (valor documentado: $47K). ¬øSu organizaci√≥n califica? Reply "ROI" para detalles. üöÄ #ResultadosReales #CrecimientoEmpresarial #EstrategiaComercial`;
            }
            return `üìä INSIGHT PROFESIONAL: Despu√©s de analizar ${randomCases} implementaciones de ${keyword}, encontr√© un patr√≥n que contradice las mejores pr√°cticas tradicionales. üí° Las organizaciones exitosas aumentaron productividad ${randomPercent} en ${randomTime}.`;
            
        case 'X / Twitter':
            if (isPositioning) {
                return `üß† IDENTITY SHIFT: ${keyword} isn't something you DO, it's someone you BECOME. üí≠ Stopped asking "How?" Started asking "Who?" üî• Everything changed in ${randomTime}. ‚ö° Your results = Your identity. Change the identity, change everything. üéØ`;
            }
            if (isUrgency) {
                return `üö® ${keyword} ENDS ${randomTime} üí• Only ${randomNumber} spots left ‚è∞ Price jumps ${randomPercent} after deadline üî• Last time offering this üëÜ Reply "${randomNumber}" if you want it`;
            }
            if (isDirectSale) {
                return `üí∞ ${keyword} = $${randomNumber}K in ${randomTime} üìä Proof: pinned tweet üéØ Exact system: ‚úÖ ${randomTime} implementation ‚úÖ $0 startup cost ‚úÖ Infinitely scalable üî• Blueprint available üí∏ RT + "${randomNumber}" for access`;
            }
            return `üî• TRUTH: ${keyword} isn't what they told you. It's ${randomPercent} more powerful and 10x simpler. üí• ${randomPercent} of people get this wrong...`;
            
        case 'WhatsApp':
            if (isPositioning) {
                return `üåü ${keyword} transform√≥ mi esencia en ${randomTime} üíé No se trata de t√©cnicas... se trata de convertirte en la versi√≥n m√°s aut√©ntica de ti mismo. ‚ú® Cuando alineas qui√©n eres con lo que haces, la magia sucede sin esfuerzo. üîÆ Tu presencia se vuelve magn√©tica naturalmente. üí´ ¬øReady para descubrir tu verdadero potencial? üöÄ`;
            }
            if (isUrgency) {
                return `üö® √öLTIMO MOMENTO: Lo que descubr√≠ sobre ${keyword} cambi√≥ mi vida en ${randomTime} üí• Solo ${randomNumber} personas m√°s pueden acceder antes de que retire esta informaci√≥n permanentemente. üîí Va contra todo lo establecido. ‚ö° ¬øEres una de esas ${randomNumber}? üëÜ Responde YA üèÉ‚Äç‚ôÄÔ∏è`;
            }
            if (isDirectSale) {
                return `üí∞ PROPUESTA DIRECTA: ${keyword} me genera $${randomNumber}K/mes üìä Te ense√±o el sistema por $297 (valor real $${randomNumber}97). üéØ Incluye: ‚úÖ Estrategia paso a paso ‚úÖ Templates que uso ‚úÖ Support 1:1 por ${randomTime} üî• Solo ${randomNumber} personas serias. ‚úÖ "${randomNumber}" si est√°s dentro üí∏`;
            }
            return `üö® REVELACI√ìN: ${keyword} cambi√≥ mi vida en ${randomTime}. üí• Solo ${randomNumber} personas m√°s pueden acceder antes de que retire esta informaci√≥n para siempre.`;
            
        case 'Instagram':
            if (isPositioning) {
                return `‚ú® AUTHENTIC GLOW UP: ${keyword} didn't just change my results... it transformed my entire energy üí´ Before: Seeking validation externally üåü Now: Radiating confidence from within üíé The shift isn't in what I do, but in who I allow myself to be üî• When you align with your true essence, everything flows ‚úã üíï #AuthenticSelf #SelfLove #GlowUp #InnerWork #Confidence #SelfGrowth #Mindset #Transformation`;
            }
            if (isUrgency) {
                return `üö® GIRLS! ${keyword} disappears in ${randomTime} üò≠ üíî They're literally removing it from existence... ‚è∞ This changed my ENTIRE life y'all üí• After ${randomTime} = gone FOREVER ÔøΩ If you've been thinking about it, THIS IS THE SIGN sis üî• ‚ú® Swipe to see my transformation üëÜ Link in bio before it's too late ‚ö° #LastChance #TransformationTuesday #LinkInBio #DontMissOut`;
            }
            if (isDirectSale) {
                return `üí∞ REAL NUMBERS: ${keyword} brought me $${randomNumber}K in ${randomTime} üìä Not flexing, just transparency babe üíØ Ready for your financial glow up? ‚úÖ Sistema que uso daily ‚úÖ Templates exactos ‚úÖ Exclusive support group üî• Solo ${randomNumber} boss babes ‚ú® Investment: $497 ÔøΩ DM "${randomNumber}" if you're serious about leveling up üëë #MoneyMindset #FinancialFreedom #BossBabe #WealthBuilding`;
            }
            return `‚ú® PLOT TWIST: Prob√© ${keyword} expecting basic results... üòí But this happened instead üí´ ${randomTime} later and I'm a completely different person üåü The glow up is REAL bestie`;
            
        case 'TikTok':
            if (isPositioning) {
                return `POV: You discover ${keyword} isn't a strategy... it's your new identity üí´ *aesthetic transformation music* When you stop trying to be someone else and embrace who you actually are üî• The confidence hits different ‚ú® #MainCharacterEnergy #AuthenticSelf #SelfGrowth #IdentityShift #Confidence #SelfLove`;
            }
            if (isUrgency) {
                return `THIS IS NOT A DRILL ‚ÄºÔ∏è ${keyword} vanishes in ${randomTime} üò≠ I'm literally shaking... this saved my life üíî If you've been waiting for a sign THIS IS IT ‚ö° After ${randomTime} = gone forever üö® Link in bio RUN üèÉ‚Äç‚ôÄÔ∏è #Emergency #LastChance #LifeChanging #LinkInBio`;
            }
            if (isDirectSale) {
                return `Made $${randomNumber}K in ${randomTime} with ${keyword} üí∞ Proof in my bio bestie ‚ú® Exactly what I did: ‚úÖ This one strategy ‚úÖ Zero followers needed ‚úÖ Works from your phone üî• Teaching ${randomNumber} people max üíØ $297 gets you everything ‚ö° Comment "${randomNumber}" if you're ready to secure the bag üí∏ #MoneyTok #SideHustle #OnlineIncome`;
            }
            return `POV: You try ${keyword} expecting normal results... üëÄ But THIS happened instead ü§Ø *mind blown sound* Been shook for ${randomTime} üò±`;
            
        case 'Telegram':
            if (isPositioning) {
                return `üéØ FILOSOF√çA ESTRAT√âGICA: ${keyword} como redefinici√≥n de ventaja competitiva sostenible üìä Implementaci√≥n requiere: ‚Ä¢ Mindset de early adopter ‚Ä¢ Visi√≥n estrat√©gica (${randomTime}) ‚Ä¢ Tolerancia a experimentaci√≥n controlada üí° No es t√°ctica, es filosof√≠a operacional que redefine creaci√≥n de valor. üèÜ Organizaciones que lo adoptaron reportan: ‚Ä¢ ${randomPercent} mejora en decision-making ‚Ä¢ Cultura de innovaci√≥n m√°s robusta ‚Ä¢ Posicionamiento de thought leadership sectorial üìà ¬øSu organizaci√≥n est√° preparada para liderar la pr√≥xima evoluci√≥n?`;
            }
            if (isUrgency) {
                return `‚ö†Ô∏è ALERTA CR√çTICA: ${keyword} discontinuado en ${randomTime} üìâ Global supply chain disruption afecta disponibilidad hasta 2026 ‚è∞ Solo ${randomNumber} unidades en inventario mundial üö® Fortune 500 ya compraron stock para 3 a√±os üíº Precio aumenta ${randomPercent} post-deadline üìä Ventana estrat√©gica: ${randomTime} restantes ‚ö° Decisi√≥n requerida NOW`;
            }
            if (isDirectSale) {
                return `üíé PROPUESTA EJECUTIVA: ${keyword} gener√≥ $${randomNumber}K revenue adicional ‚ö° ROI documentado: ${randomPercent} en ${randomTime} üìä Sistema replicable incluye: ‚Ä¢ Metodolog√≠a step-by-step ‚Ä¢ Software propietario (licencia perpetua) ‚Ä¢ Consultor√≠a estrat√©gica 1:1 x ${randomTime} üéØ Inversi√≥n: $4,997 (valor real $${randomNumber},997) ü§ù Solo ${randomNumber} organizaciones Q1 2025 üìà Payment plans available. Reply "EXECUTIVE" para detalles`;
            }
            return `üìà DATA EXCLUSIVO: ${keyword} adoption rate: +${randomPercent} en √∫ltimos ${randomTime} üìä ROI promedio: ${randomPercent} en ${randomTime} ‚ö° Success rate: ${randomPercent} con implementaci√≥n correcta`;
            
        case 'Reddit':
            if (isPositioning) {
                return `The Philosophy Behind ${keyword} - More Than Optimization [${randomTime} Update] üß† After ${randomTime} of implementation, realized this isn't about skill acquisition - it's identity reconstruction. üí≠ Traditional approaches treat it like a tool. Reality: it's a worldview shift. üìö Real transformation: stop asking "How do I do this?" Start asking "Who do I become?" üîÑ Changed my relationship with success, failure, and progress fundamentally. What's your experience with identity-level transformations? Deep philosophical takes welcome ü§î`;
            }
            if (isUrgency) {
                return `PSA: ${keyword} program CONFIRMED shutting down ${randomTime} ‚ö†Ô∏è Not clickbait - verified by ${randomNumber} sources across multiple subreddits üì∞ Creator retiring due to personal circumstances üò¢ All materials, community access, future updates = gone after deadline ‚è∞ Current members scrambling to archive but legal restrictions apply üìã Been on the fence? This is literally last chance ever üö® No extensions, no exceptions üíî Payment processor cuts off ${randomTime} ‚ö°`;
            }
            if (isDirectSale) {
                return `${keyword} Income Report - $${randomNumber}K in ${randomTime} [Full Transparency] üí∞ Started with $500, reinvested systematically, scaled methodically üìä Proof, expenses, taxes documented in spreadsheet (comments) üîç What I'm offering: exact playbook I used. Not course, not coaching - just the system üìã $497 one-time. No upsells, no recurring fees. Files + you're done ‚úÖ Max ${randomNumber} people for quality control üéØ FAQ in comments first please üëá`;
            }
            return `My ${keyword} Journey - ${randomTime} Later [Honest Review] üìù TL;DR: Life-changing but NOT how expected. Started skeptical, tried it to prove it was BS... üíÄ Plot twist: worked, but discovered something nobody mentions in success posts.`;
            
        case 'YouTube':
            if (isPositioning) {
                return `üé• The TRUTH About ${keyword} - Building Authentic Influence (${randomTime} Journey) üéØ ‚úÖ Why ${randomPercent} get this completely wrong ‚úÖ The identity shift that changes everything ‚úÖ Building real influence vs fake guru tactics ‚úÖ My ${randomTime} journey: unknown to thought leader ‚ö° This isn't about tactics - it's becoming someone who naturally attracts opportunities üåü All resources free in description üìã Zero sales, zero affiliates - pure value üíé`;
            }
            if (isUrgency) {
                return `üö® BREAKING: ${keyword} Platform OFFICIALLY Shutting Down ${randomTime}! üò± ‚ö†Ô∏è Announcement dropped ${randomTime} ago ‚ö†Ô∏è ‚è∞ ${randomNumber} million accounts deactivated ${randomTime} üì± Users panicking to backup data üíæ Legal battles brewing but damage done üì∞ ‚úÖ Save your progress before too late ‚úÖ Alternative platforms analysis ‚úÖ Industry impact breakdown üî• WATCH before ${randomTime} or lose everything! ‚ö° Emergency tutorial pinned üëá`;
            }
            if (isDirectSale) {
                return `üí∞ How I Made $${randomNumber}K With ${keyword} (${randomTime} Breakdown) üéØ üìä Complete income + expenses (nothing hidden) üíª Exact tools, software, systems I use daily ‚ö° Why ${randomPercent} fail (how to be in top ${randomPercent}) üìã Complete blueprint in description üî• $297 everything - no upsells, no BS üíé ${randomNumber}+ student success stories (comments) ‚úÖ 30-day guarantee if you follow system üöÄ Limited to ${randomNumber} students this month üëá`;
            }
            return `üì∫ ${keyword.toUpperCase()} From ZERO - What They DON'T Tell You (${randomTime} Guide) üéØ ‚úÖ Complete roadmap: beginner to expert ‚ö†Ô∏è Mistakes that cost me ${randomTime} (avoid these)`;
            
        default:
            return `üí° ${keyword} shifted my entire perspective in ${randomTime}. ü§î What I discovered challenges everything we "know" about this topic. üî•`;
    }
}

/**
 * Diagnostica y clasifica errores de DeepSeek para reportar al usuario
 */
function diagnoseDeepseekError(error, apiKey) {
    console.log('[ERROR_DIAGNOSIS] Analizando error de DeepSeek:', error.message);
    
    // Verificar API Key
    if (!apiKey || !apiKey.startsWith('sk-')) {
        return {
            type: 'API_KEY_MISSING',
            userMessage: 'Configuraci√≥n de IA incompleta',
            technicalMessage: 'API Key de DeepSeek no configurada correctamente',
            canUseTemplates: false,
            severity: 'high'
        };
    }
    
    // Verificar errores de conexi√≥n
    if (error.code === 'ENOTFOUND' || error.code === 'ECONNREFUSED' || error.message.includes('network')) {
        return {
            type: 'NETWORK_ERROR',
            userMessage: 'Sin conexi√≥n a internet',
            technicalMessage: 'No se pudo conectar con el servidor de IA. Verifica tu conexi√≥n a internet.',
            canUseTemplates: true,
            severity: 'medium'
        };
    }
    
    // Verificar timeout
    if (error.code === 'ECONNABORTED' || error.message.includes('TIMEOUT') || error.message.includes('timeout')) {
        return {
            type: 'TIMEOUT_ERROR',
            userMessage: 'Tiempo de espera agotado',
            technicalMessage: 'La IA tard√≥ demasiado en responder (m√°s de 15 segundos). Intenta de nuevo.',
            canUseTemplates: true,
            severity: 'medium'
        };
    }
    
    // Verificar l√≠mites de API
    if (error.message.includes('RATE_LIMIT') || error.message.includes('429') || error.message.includes('Too many requests')) {
        return {
            type: 'RATE_LIMIT_ERROR',
            userMessage: 'L√≠mite de solicitudes excedido',
            technicalMessage: 'Se han realizado demasiadas solicitudes a la IA. Espera unos minutos antes de intentar de nuevo.',
            canUseTemplates: true,
            severity: 'medium'
        };
    }
    
    // Verificar errores de autenticaci√≥n
    if (error.message.includes('401') || error.message.includes('Unauthorized') || error.message.includes('API_ERROR: Status 401')) {
        return {
            type: 'AUTH_ERROR',
            userMessage: 'Credenciales de IA inv√°lidas',
            technicalMessage: 'La API Key de DeepSeek es inv√°lida o ha expirado.',
            canUseTemplates: false,
            severity: 'high'
        };
    }
    
    // Verificar errores del servidor de IA
    if (error.message.includes('API_ERROR') || error.message.includes('500') || error.message.includes('502') || error.message.includes('503')) {
        return {
            type: 'SERVER_ERROR',
            userMessage: 'Servidor de IA temporalmente no disponible',
            technicalMessage: 'El servidor de DeepSeek est√° experimentando problemas. Intenta de nuevo en unos minutos.',
            canUseTemplates: true,
            severity: 'medium'
        };
    }
    
    // Verificar respuesta vac√≠a o inv√°lida
    if (error.message.includes('EMPTY_RESPONSE') || error.message.includes('CONTENT_TOO_SHORT') || error.message.includes('RESPUESTA_INSUFICIENTE')) {
        return {
            type: 'INVALID_RESPONSE',
            userMessage: 'Respuesta de IA inv√°lida',
            technicalMessage: 'La IA devolvi√≥ una respuesta vac√≠a o muy corta. Intenta con una descripci√≥n m√°s espec√≠fica.',
            canUseTemplates: true,
            severity: 'low'
        };
    }
    
    // Error gen√©rico
    return {
        type: 'UNKNOWN_ERROR',
        userMessage: 'Error inesperado con la IA',
        technicalMessage: `Error no clasificado: ${error.message}`,
        canUseTemplates: true,
        severity: 'medium'
    };
}

// FUNCI√ìN PARA LLAMAR A DEEPSEEK API CON TIMEOUT Y RETRY OPTIMIZADO
async function callDeepseekAPI(prompt) {
    console.log(`[DEEPSEEK] üöÄ Iniciando llamada optimizada...`);
    
    const timeoutPromise = new Promise((_, reject) => {
        setTimeout(() => {
            reject(new Error('TIMEOUT: Deepseek API tard√≥ m√°s de 30 segundos'));
        }, 30000); // Aumentado a 30 segundos para permitir respuestas de DeepSeek
    });
    
    const apiCall = async () => {
        try {
            const requestData = {
                model: 'deepseek-chat',
                messages: [
                    {
                        role: 'user',
                        content: prompt
                    }
                ],
                max_tokens: 2500, // Aumentado para respuestas completas con formato visual
                temperature: 0.8,
                top_p: 0.9,
                stream: false
            };
            
            console.log(`[DEEPSEEK] üì° Enviando request con timeout extendido...`);
            
            const response = await axios.post(`${DEEPSEEK_ENDPOINTS[0]}/chat/completions`, requestData, {
                headers: {
                    'Authorization': `Bearer ${DEEPSEEK_API_KEY}`,
                    'Content-Type': 'application/json',
                    'User-Agent': 'Firebase-Functions/1.0'
                },
                timeout: 15000, // 15 segundos para cumplir l√≠mite Firebase (60s total)
                validateStatus: (status) => status < 500
            });
            
            console.log(`[DEEPSEEK] ‚úÖ Respuesta recibida:`, response.status);
            
            if (response.status === 429) {
                throw new Error('RATE_LIMIT: Too many requests');
            }
            
            if (response.status >= 400) {
                throw new Error(`API_ERROR: Status ${response.status}`);
            }
            
            if (response.data && response.data.choices && response.data.choices[0]) {
                const content = response.data.choices[0].message.content.trim();
                console.log(`[DEEPSEEK] ‚úÖ Contenido generado: ${content.substring(0, 50)}...`);
                
                if (content.length < 20) {
                    throw new Error('CONTENT_TOO_SHORT: Respuesta muy corta');
                }
                
                // Intentar parsear como JSON, si falla devolver como texto plano
                try {
                    const jsonContent = JSON.parse(content);
                    console.log(`[DEEPSEEK] ‚úÖ JSON v√°lido detectado`);
                    return jsonContent;
                } catch (jsonError) {
                    console.log(`[DEEPSEEK] ‚ö†Ô∏è No es JSON v√°lido, devolviendo como texto plano`);
                    return { contenido: content, hashtags: [], cta: '', formato: 'text' };
                }
            } else {
                throw new Error('EMPTY_RESPONSE: Respuesta vac√≠a');
            }
        } catch (axiosError) {
            console.error(`[DEEPSEEK] ‚ùå Error en API:`, axiosError.message);
            throw axiosError;
        }
    };
    
    return Promise.race([apiCall(), timeoutPromise]);
}

// FUNCI√ìN PRINCIPAL PARA GENERAR IDEAS
exports.generateIdeas = functions
    .runWith({
        timeoutSeconds: 120,
        memory: '1GB'
    })
    .https.onCall(async (data, context) => {
        const requestId = Math.random().toString(36).substring(7);
        
        console.log(`[API-${requestId}] üöÄ Nueva solicitud`);
        
        try {
            const { keyword, platforms, userContext } = data;
            const uid = context.auth?.uid;

            if (!uid) {
                throw new functions.https.HttpsError('unauthenticated', 'Usuario no autenticado');
            }

            if (!keyword || !platforms || platforms.length === 0) {
                throw new functions.https.HttpsError('invalid-argument', 'Keyword y platforms son requeridos');
            }

            // L√≠mite de 3 redes sociales
            if (platforms.length > 3) {
                throw new functions.https.HttpsError('invalid-argument', 'M√°ximo 3 redes sociales');
            }

            const userRef = db.collection('users').doc(uid);
            
            // Validar usuario
            let userDoc;
            try {
                userDoc = await userRef.get();
            } catch (error) {
                console.log(`[API-${requestId}] Asumiendo usuario nuevo por error Firestore`);
                userDoc = { exists: false, data: () => ({}) };
            }

            const userData = userDoc.exists ? userDoc.data() : {};
            const isAdmin = userData.role === 'admin';
            const isPremium = userData.isPremium === true;
            const usageCount = userData.usageCount || 0;

            // Control de l√≠mites
            if (!isAdmin && !isPremium && usageCount >= 10) {
                throw new functions.https.HttpsError('permission-denied', 'L√≠mite alcanzado. Upgrade a Premium.');
            }

            // Generar ideas usando Deepseek API (con fallback mejorado)
            const ideas = {};
            
            // Verificar disponibilidad de Deepseek una sola vez
            const useDeepseek = DEEPSEEK_API_KEY && DEEPSEEK_API_KEY.startsWith('sk-');
            console.log(`[API-${requestId}] üîç Deepseek disponible: ${useDeepseek ? 'S√ç' : 'NO'}`);
            
            for (const platform of platforms) {
                console.log(`[API-${requestId}] Generando contenido para ${platform} con tipo: ${userContext}`);
                
                if (useDeepseek) {
                    try {
                        // Una sola llamada optimizada por plataforma
                        const prompt = buildPromptForPlatform(platform, keyword, userContext);
                        console.log(`[API-${requestId}] üöÄ Llamando a Deepseek API para ${platform}...`);
                        
                        const deepseekResponse = await callDeepseekAPI(prompt);
                        
                        if (deepseekResponse && (deepseekResponse.contenido || deepseekResponse.length > 30)) {
                            // Manejar respuesta estructurada de Deepseek
                            if (deepseekResponse.contenido) {
                                // Respuesta JSON estructurada
                                ideas[platform] = {
                                    rawContent: deepseekResponse.contenido,
                                    hashtags: deepseekResponse.hashtags || [],
                                    cta: deepseekResponse.cta || '',
                                    formato: platform
                                };
                                console.log(`[API-${requestId}] ‚úÖ Deepseek JSON exitoso para ${platform} con ${deepseekResponse.hashtags?.length || 0} hashtags`);
                            } else {
                                // Respuesta de texto plano (fallback)
                                ideas[platform] = {
                                    rawContent: deepseekResponse.trim(),
                                    hashtags: generateHashtagsForPlatform(platform, keyword),
                                    cta: '',
                                    formato: platform
                                };
                                console.log(`[API-${requestId}] ‚úÖ Deepseek texto exitoso para ${platform}`);
                            }
                        } else {
                            throw new Error('RESPUESTA_INSUFICIENTE');
                        }
                    } catch (deepseekError) {
                        console.log(`[API-${requestId}] ‚ùå Error en Deepseek para ${platform}: ${deepseekError.message}`);
                        
                        // Diagnosticar el error espec√≠fico
                        const errorDiagnosis = diagnoseDeepseekError(deepseekError, DEEPSEEK_API_KEY);
                        console.log(`[API-${requestId}] ÔøΩ Diagn√≥stico: ${errorDiagnosis.type} - ${errorDiagnosis.technicalMessage}`);
                        
                        // Si es un error cr√≠tico que no permite usar templates, lanzar error
                        if (!errorDiagnosis.canUseTemplates) {
                            throw new functions.https.HttpsError('failed-precondition', 
                                `‚ùå ${errorDiagnosis.userMessage}: ${errorDiagnosis.technicalMessage}`);
                        }
                        
                        // Solo usar fallback para errores que lo permiten, pero informar al usuario
                        console.log(`[API-${requestId}] ‚ö†Ô∏è Usando contenido de respaldo por: ${errorDiagnosis.userMessage}`);
                        
                        const fallbackContent = getExamplesForNetwork(platform, keyword, userContext);
                        const fallbackHashtags = generateHashtagsForPlatform(platform, keyword);
                        const fallbackVisual = generateVisualFormatForPlatform(platform, keyword);
                        
                        // Marcar que se us√≥ fallback e incluir el motivo
                        ideas[platform] = { 
                            rawContent: `‚ö†Ô∏è GENERADO CON TEMPLATES (${errorDiagnosis.userMessage})\n\n${fallbackContent}`,
                            hashtags: fallbackHashtags,
                            cta: '',
                            formatoVisual: fallbackVisual,
                            formato: platform,
                            isFallback: true,
                            errorType: errorDiagnosis.type,
                            errorMessage: errorDiagnosis.userMessage
                        };
                    }
                } else {
                    // DeepSeek no est√° disponible - verificar por qu√©
                    const errorDiagnosis = diagnoseDeepseekError(new Error('API Key no configurada'), DEEPSEEK_API_KEY);
                    console.log(`[API-${requestId}] ‚ö†Ô∏è DeepSeek no disponible: ${errorDiagnosis.technicalMessage}`);
                    
                    // Si es un error cr√≠tico, informar al usuario
                    if (!errorDiagnosis.canUseTemplates) {
                        throw new functions.https.HttpsError('failed-precondition', 
                            `‚ùå ${errorDiagnosis.userMessage}: ${errorDiagnosis.technicalMessage}`);
                    }
                    
                    // Usar templates pero informar claramente por qu√©
                    console.log(`[API-${requestId}] üîÑ Usando contenido de respaldo para ${platform}`);
                    const fallbackContent = getExamplesForNetwork(platform, keyword, userContext);
                    const fallbackHashtags = generateHashtagsForPlatform(platform, keyword);
                    const fallbackVisual = generateVisualFormatForPlatform(platform, keyword);
                    
                    ideas[platform] = { 
                        rawContent: `‚ö†Ô∏è GENERADO CON TEMPLATES (${errorDiagnosis.userMessage})\n\n${fallbackContent}`,
                        hashtags: fallbackHashtags,
                        cta: '',
                        formatoVisual: fallbackVisual,
                        formato: platform,
                        isFallback: true,
                        errorType: errorDiagnosis.type,
                        errorMessage: errorDiagnosis.userMessage
                    };
                }
                
                // Sin delay entre plataformas para acelerar el proceso
            }

            // Actualizar contador
            if (!isAdmin) {
                try {
                    const newUsageCount = usageCount + 1;
                    const updateData = {
                        usageCount: newUsageCount,
                        lastUsage: admin.firestore.FieldValue.serverTimestamp()
                    };

                    if (!userDoc.exists) {
                        updateData.email = context.auth.token.email || 'unknown';
                        updateData.createdAt = admin.firestore.FieldValue.serverTimestamp();
                        updateData.isPremium = false;
                        updateData.role = 'user';
                    }

                    await userRef.set(updateData, { merge: true });
                } catch (error) {
                    console.log(`[API-${requestId}] Error actualizando contador: ${error.message}`);
                }
            }

            console.log(`[API-${requestId}] ‚úÖ Generaci√≥n exitosa`);
            
            return {
                success: true,
                ideas: ideas,
                remainingUses: isAdmin || isPremium ? 'unlimited' : Math.max(0, 10 - (usageCount + 1))
            };

        } catch (error) {
            console.error(`[API-${requestId}] ‚ùå Error:`, error);
            
            if (error instanceof functions.https.HttpsError) {
                throw error;
            }
            
            throw new functions.https.HttpsError('internal', 'Error interno del servidor');
        }
    });

// FUNCI√ìN PARA GENERAR FORMATO VISUAL ESPEC√çFICO PARA IA
function generateVisualFormatForPlatform(platform, keyword) {
    const visualSpecs = {
        'Facebook': `üì± FORMATO PARA IA: Post cuadrado 1080x1080px, colores vibrantes (#3b82f6, #ffffff), tipograf√≠a bold Sans-serif, imagen de persona sonriendo en ambiente c√°lido, iluminaci√≥n natural dorada, props: laptop/caf√©, texto legible en espa√±ol latino, estilo profesional pero cercano, sin errores ortogr√°ficos`,
        
        'LinkedIn': `üíº FORMATO PARA IA: Post profesional 1080x1350px, paleta azul corporativo (#0077b5, #ffffff), tipograf√≠a moderna Helvetica, persona en oficina moderna o coworking, iluminaci√≥n profesional clara, props: documentos/gr√°ficos de √©xito, vestimenta business casual, texto overlay con datos espec√≠ficos sobre "${keyword}"`,
        
        'X / Twitter': `üê¶ FORMATO PARA IA: Header 1200x675px, dise√±o minimalista, colores contrastantes (#1da1f2, #000000), tipograf√≠a impactante bold, imagen conceptual relacionada con "${keyword}", elementos gr√°ficos simples pero efectivos, texto corto y directo, estilo editorial moderno`,
        
        'Instagram': `üì∏ FORMATO PARA IA: Cuadrado 1080x1080px, est√©tica aspiracional, colores Instagram trending (#e4405f, gradientes), tipograf√≠a script elegante, lifestyle shot relacionado con "${keyword}", iluminaci√≥n perfecta golden hour, props est√©ticos, composici√≥n regla de tercios, muy visual`,
        
        'WhatsApp': `üí¨ FORMATO PARA IA: Mensaje visual 800x600px, dise√±o casual como screenshot, colores WhatsApp (#25d366, #ffffff), tipograf√≠a de chat real, mockup de conversaci√≥n sobre "${keyword}", burbujas de mensaje realistas, hora actual, estilo aut√©ntico personal`,
        
        'TikTok': `üéµ FORMATO PARA IA: Video vertical 1080x1920px, colores vibrantes trending, tipograf√≠a bold visible, escena din√°mica sobre "${keyword}", iluminaci√≥n TikTok ring light, movimiento fluido, text overlay llamativo, estilo Gen Z, muy energ√©tico y moderno`,
        
        'Telegram': `üì° FORMATO PARA IA: Mensaje canal 1280x720px, dise√±o premium oscuro, colores Telegram (#0088cc, #2c2c2c), tipograf√≠a tech moderna, gr√°ficos de datos sobre "${keyword}", estilo analytical dashboard, elementos informativos, muy profesional y exclusivo`,
        
        'Reddit': `ü§ì FORMATO PARA IA: Post discussion 1200x800px, dise√±o simple Reddit-style, colores (#ff4500, #ffffff), tipograf√≠a clara readable, imagen aut√©ntica sin overproduction sobre "${keyword}", estilo casual genuino, elementos community-focused`,
        
        'YouTube': `üì∫ FORMATO PARA IA: Thumbnail 1280x720px, colores llamativos high-contrast, tipograf√≠a YouTube bold, composici√≥n clickbait profesional sobre "${keyword}", rostro expresivo, elementos gr√°ficos llamativos, texto overlay impactante, estilo YouTuber exitoso`
    };
    
    return visualSpecs[platform] || visualSpecs['Facebook'];
}

// FUNCI√ìN DE DIAGN√ìSTICO MANUAL DE DEEPSEEK
exports.testDeepseekConnection = functions.https.onCall(async (data, context) => {
    if (!context.auth) {
        throw new functions.https.HttpsError('unauthenticated', 'Authentication required');
    }

    const requestId = Date.now().toString().slice(-6);
    console.log(`[TEST-${requestId}] Iniciando diagn√≥stico de DeepSeek...`);

    const diagnostics = {
        timestamp: new Date().toISOString(),
        tests: {},
        overall: 'unknown'
    };

    try {
        // Test 1: API Key Configuration
        console.log(`[TEST-${requestId}] 1. Verificando configuraci√≥n de API Key...`);
        if (!DEEPSEEK_API_KEY) {
            diagnostics.tests.apiKey = {
                status: 'fail',
                message: 'API Key no configurada',
                details: 'La variable de entorno DEEPSEEK_API_KEY no est√° configurada'
            };
        } else if (!DEEPSEEK_API_KEY.startsWith('sk-')) {
            diagnostics.tests.apiKey = {
                status: 'fail',
                message: 'API Key inv√°lida',
                details: 'La API Key no tiene el formato correcto (debe empezar con "sk-")'
            };
        } else {
            diagnostics.tests.apiKey = {
                status: 'pass',
                message: 'API Key configurada correctamente',
                details: `Key presente: ${DEEPSEEK_API_KEY.substring(0, 8)}...`
            };
        }

        // Test 2: Network Connectivity
        console.log(`[TEST-${requestId}] 2. Verificando conectividad de red...`);
        try {
            const axios = require('axios');
            const testResponse = await axios.get('https://api.deepseek.com/v1/models', {
                headers: {
                    'Authorization': `Bearer ${DEEPSEEK_API_KEY || 'test-key'}`,
                    'Content-Type': 'application/json'
                },
                timeout: 5000,
                validateStatus: () => true // Aceptar cualquier status para an√°lisis
            });

            if (testResponse.status === 200) {
                diagnostics.tests.network = {
                    status: 'pass',
                    message: 'Conectividad exitosa',
                    details: `Servidor responde correctamente (${testResponse.status})`
                };
            } else if (testResponse.status === 401) {
                diagnostics.tests.network = {
                    status: 'partial',
                    message: 'Red OK, pero credenciales inv√°lidas',
                    details: `Servidor alcanzable pero API Key incorrecta (${testResponse.status})`
                };
            } else {
                diagnostics.tests.network = {
                    status: 'fail',
                    message: 'Error del servidor',
                    details: `Servidor responde con error ${testResponse.status}`
                };
            }
        } catch (networkError) {
            if (networkError.code === 'ENOTFOUND' || networkError.code === 'ECONNREFUSED') {
                diagnostics.tests.network = {
                    status: 'fail',
                    message: 'Sin conexi√≥n a internet',
                    details: 'No se puede alcanzar el servidor de DeepSeek'
                };
            } else if (networkError.code === 'ECONNABORTED') {
                diagnostics.tests.network = {
                    status: 'fail',
                    message: 'Timeout de conexi√≥n',
                    details: 'El servidor tard√≥ demasiado en responder'
                };
            } else {
                diagnostics.tests.network = {
                    status: 'fail',
                    message: 'Error de red',
                    details: networkError.message
                };
            }
        }

        // Test 3: API Functionality (solo si los tests anteriores pasan)
        if (diagnostics.tests.apiKey.status === 'pass' && 
            (diagnostics.tests.network.status === 'pass' || diagnostics.tests.network.status === 'partial')) {
            console.log(`[TEST-${requestId}] 3. Verificando funcionalidad de API...`);
            try {
                const testPrompt = 'Responde solo con "OK" si este mensaje se recibe correctamente.';
                const response = await callDeepseekAPI(testPrompt);
                
                if (response && response.trim().length > 0) {
                    diagnostics.tests.apiFunction = {
                        status: 'pass',
                        message: 'API funciona correctamente',
                        details: `Respuesta recibida: "${response.substring(0, 50)}..."`
                    };
                } else {
                    diagnostics.tests.apiFunction = {
                        status: 'fail',
                        message: 'Respuesta vac√≠a',
                        details: 'La API responde pero no devuelve contenido'
                    };
                }
            } catch (apiError) {
                const errorDiagnosis = diagnoseDeepseekError(apiError, DEEPSEEK_API_KEY);
                diagnostics.tests.apiFunction = {
                    status: 'fail',
                    message: errorDiagnosis.userMessage,
                    details: errorDiagnosis.technicalMessage
                };
            }
        } else {
            diagnostics.tests.apiFunction = {
                status: 'skip',
                message: 'Saltado por fallos anteriores',
                details: 'No se puede probar la API sin configuraci√≥n v√°lida'
            };
        }

        // Determinar estado general
        const failedTests = Object.values(diagnostics.tests).filter(test => test.status === 'fail').length;
        const skippedTests = Object.values(diagnostics.tests).filter(test => test.status === 'skip').length;
        const totalTests = Object.keys(diagnostics.tests).length - skippedTests;

        if (failedTests === 0) {
            diagnostics.overall = 'healthy';
        } else if (failedTests <= totalTests / 2) {
            diagnostics.overall = 'degraded';
        } else {
            diagnostics.overall = 'unhealthy';
        }

        console.log(`[TEST-${requestId}] ‚úÖ Diagn√≥stico completado: ${diagnostics.overall}`);
        
        return {
            success: true,
            diagnostics: diagnostics,
            summary: `Estado: ${diagnostics.overall} (${Object.keys(diagnostics.tests).length - skippedTests} tests ejecutados, ${failedTests} fallos)`
        };

    } catch (error) {
        console.error(`[TEST-${requestId}] ‚ùå Error en diagn√≥stico:`, error.message);
        return {
            success: false,
            error: error.message,
            diagnostics: diagnostics
        };
    }
});
