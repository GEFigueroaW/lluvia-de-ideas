// Script para forzar reenv√≠o de verificaci√≥n de email
import { auth } from './js/firebase-config.js';
import { sendEmailVerification } from 'https://www.gstatic.com/firebasejs/9.21.0/firebase-auth.js';

async function forceResendVerification() {
    try {
        const user = auth.currentUser;
        if (!user) {
            console.log('‚ùå No hay usuario logueado');
            return;
        }
        
        if (user.emailVerified) {
            console.log('‚úÖ Email ya est√° verificado');
            return;
        }
        
        console.log('üìß Reenviando email de verificaci√≥n...');
        await sendEmailVerification(user);
        console.log('‚úÖ Email de verificaci√≥n enviado a:', user.email);
        alert('Email de verificaci√≥n enviado. Revisa tu bandeja de entrada y spam.');
        
    } catch (error) {
        console.error('‚ùå Error:', error);
        alert('Error: ' + error.message);
    }
}

// Funci√≥n para marcar como verificado administrativamente
async function forceMarkAsVerified() {
    try {
        const user = auth.currentUser;
        if (!user) {
            console.log('‚ùå No hay usuario logueado');
            return;
        }
        
        console.log('üîß Forzando bypass de verificaci√≥n...');
        
        // Recargar usuario
        await user.reload();
        
        // Simular que est√° verificado localmente
        localStorage.setItem('admin_verified_' + user.uid, 'true');
        
        console.log('‚úÖ Bypass local aplicado');
        
        // Forzar actualizaci√≥n de la interfaz
        window.location.reload();
        
    } catch (error) {
        console.error('‚ùå Error:', error);
    }
}

window.forceResendVerification = forceResendVerification;
window.forceMarkAsVerified = forceMarkAsVerified;

console.log('üìß Funciones de verificaci√≥n cargadas:');
console.log('- forceResendVerification() - Reenviar email');
console.log('- forceMarkAsVerified() - Bypass local');
